##  Python
##  Strings


##  sWAP cASE

def swap_case(s):
    return s.swapcase()

if __name__ == '__main__':
    s = input()
    result = swap_case(s)
    print(result)


##  String Split and Join

def split_and_join(line):
    return "-".join(line.split(" "))
    # write your code here

if __name__ == '__main__':
    line = input()
    result = split_and_join(line)
    print(result)
    
##  What's Your Name?

def print_full_name(a, b):
    print("Hello %s %s! You just delved into python." % (a, b))

if __name__ == '__main__':
    first_name = input()
    last_name = input()
    print_full_name(first_name, last_name)
    
    
## Mutations

def mutate_string(string, position, character):
    return string[:position] + character + string[(position + 1):]

if __name__ == '__main__':
    s = input()
    i, c = input().split()
    s_new = mutate_string(s, int(i), c)
    print(s_new)


##  Find a string

def count_substring(string, sub_string):
    counts = 0
    for i in range(len(string) - (len(sub_string) - 1)):
        if string[i:(i + len(sub_string))] == sub_string:
            counts += 1
    return counts

if __name__ == '__main__':
    string = input().strip()
    sub_string = input().strip()
    
    count = count_substring(string, sub_string)
    print(count)


##  String Validators

if __name__ == '__main__':
    s = input()

print(any(c.isalnum() for c in s))
print(any(c.isalpha() for c in s))
print(any(c.isdigit() for c in s))
print(any(c.islower() for c in s))
print(any(c.isupper() for c in s))


##  Text Alignment

#Replace all ______ with rjust, ljust or center. 

thickness = int(input()) #This must be an odd number
c = 'H'

#Top Cone
for i in range(thickness):
    print((c*i).rjust(thickness-1)+c+(c*i).ljust(thickness-1))

#Top Pillars
for i in range(thickness+1):
    print((c*thickness).center(thickness*2)+(c*thickness).center(thickness*6))

#Middle Belt
for i in range((thickness+1)//2):
    print((c*thickness*5).center(thickness*6))    

#Bottom Pillars
for i in range(thickness+1):
    print((c*thickness).center(thickness*2)+(c*thickness).center(thickness*6))    

#Bottom Cone
for i in range(thickness):
    print(((c*(thickness-i-1)).rjust(thickness)+c+(c*(thickness-i-1)).ljust(thickness)).rjust(thickness*6))


##  Text Wrap

import textwrap

def wrap(string, max_width):
    return '\n'.join(textwrap.wrap(string, max_width))

if __name__ == '__main__':
    string, max_width = input(), int(input())
    result = wrap(string, max_width)
    print(result)


##  Designer Door Mat

# Enter your code here. Read input from STDIN. Print output to STDOUT
height, width = map(int, input().split())

for c in range(height // 2):
    print(((2 * c + 1) * '.|.').center(width, '-'))

print('WELCOME'.center(width, '-'))

for c in range(height // 2, 0, -1):
    print(((2 * (c - 1) + 1) * '.|.').center(width, '-'))


##  Alphabet Rangoli

import string

def print_rangoli(size):
    alpha = string.ascii_lowercase
    width = size * 4 - 3
    L = []
    for i in range(size):
        s = '-'.join(alpha[i:size])     # creates a string starting with a and going to the ith letter
        L.append((s[::-1]+s[1:]).center(width, '-'))    # reads the string s from right to left and back to right and saves it to L
    print('\n'.join(L[:0:-1]+L))    # prints the list L from last item to first and back to last

if __name__ == '__main__':
    n = int(input())
    print_rangoli(n)


##  Capitalize!

#!/bin/python3

import math
import os
import random
import re
import sys

# Complete the solve function below.
def solve(s):
    words = s.split(' ')
    return ' '.join(word.capitalize() for word in words)

    
if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    s = input()

    result = solve(s)

    fptr.write(result + '\n')

    fptr.close()
